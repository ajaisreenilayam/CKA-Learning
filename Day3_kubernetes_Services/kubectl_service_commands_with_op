kubectl  get services
kubectl describe  svc
kubectl  get deployments.apps
kubectl describe deployments.apps  simple-webapp-deployment
kubectl describe deployments.apps  simple-webapp-deployment  | grep image
vim service-definition-1.yaml
kubectl expose service nginx --port=443 --target-port=8443 --name=nginx-https -o yaml --dry-run
kubectl  create  -f service-definition-1.yaml

kubectl expose service webapp-service --port=443 --target-port=8443 --name=nginx-https -o yaml --dry-run


apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: nginx-https
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 8443
  selector:
    name: simple-webapp
status:
  loadBalancer: {}

##
# if you wanted to create a service using imperative commands, you need to create a pod first

kubectl run redis --image=redis --restart=Never --labels=tier=dbservice -o yaml --dry-run > redis-pod.yml

apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    tier: dbservice
  name: redis
spec:
  containers:
  - image: redis
    name: redis
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Never
status: {}

kubectl expose pod redis --name=redis-service  --port=6379 --target-port=6379 -o yaml --dry-run > redis-service.yml 

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    tier: dbservice
  name: redis-service
spec:
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    tier: dbservice
status:
  loadBalancer: {}

This will create a yaml file